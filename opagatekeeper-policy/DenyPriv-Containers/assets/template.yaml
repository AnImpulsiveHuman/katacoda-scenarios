apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sprivilegedcontainer
spec:
  crd:
    spec:
      names:
        kind: K8sPrivilegedContainer
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sprivilegedcontainer
        violation [{"msg": msg}] {                  
             #input.review.object.kind == "Pod"                                        #Ensures it is Pod
             #c := input_containers[_]
             #c.securityContext.privileged                                             #Checks for privileged field under Security Context 
             #msg := sprintf("Privileged container is not allowed: %v, securityContext: %v",[c.name, c.securityContext]) }      #Violation message if privilege container found
             #input_containers[c] {  
             #c := input.request.object.spec.containers[_]}
             #input_containers[c] {
             #c := input.request.object.spec.initContainers[_]}
